----------------------------
In /home/user/.bashrc
----------------------------

echo "Checking for virtulization: egrep -c '(vmx|svm)' /proc/cpuinfo"
egrep -c '(vmx|svm)' /proc/cpuinfo

export PATH="$PATH:/home/user/Downloads/software/flutter_linux_v1.12.13+hotfix.5-stable/flutter/bin"

export ANDROID_STUDIO="/home/user/Downloads/software/android-studio-ide-191.6010548-linux/android-studio/bin" 
export PATH=$PATH:$ANDROID_STUDIO
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/tools

export PATH="$PATH:/home/user/Downloads/software/google_chrome/opt/google/chrome"
export PATH="$PATH:/home/user/Downloads/software/visual_code/usr/share/code/bin"
export PATH="$PATH:/usr/bin/docker"
export PATH="$PATH:/usr/bin/java"

echo "Locating the tools"
which flutter
which android
which chrome
which code
which docker
which java

echo "
LET'S BEGIN !!

For Flutter:
------------
flutter 

For Android:
------------
studio.sh
android

For Chrome:
-----------
chrome

For VSCode:
-----------
code

For Docker:
-----------
docker

For Java:
---------
java

"

echo "To start Docker Daemon
sudo systemctl start docker
sudo docker run hello-world
"

export INITIAL_SETUP="/home/user/Downloads/initial_setup.sh"
chmod +x $INITIAL_SETUP

if ! [ -e  "/usr/bin/docker" ] || ! [ -e  "/usr/bin/java"  ]
then
    echo "Executing the initial setup script:" $INITIAL_SETUP "
    "
    bash $INITIAL_SETUP
fi


=======================================================================

-----------------------------------------
Terminal commands for Executing the tools
-----------------------------------------

For Flutter:
------------
flutter 

For Android:
------------
studio.sh
android

For Chrome:
-----------
chrome

For VSCode:
-----------
code

For Docker:
-----------
docker


=======================================================================

Installation
------------

sudo dnf -y install dnf-plugins-core
sudo dnf config-manager \
    --add-repo \
    https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf -y install docker-ce docker-ce-cli containerd.io
sudo systemctl start docker

sudo docker run hello-world

sudo rpm -ivh /home/user/Downloads/zip/jre-8u231-linux-x64.rpm

sudo dnf -y install dnf-yum
sudo yum -y install libXScrnSaver


=======================================================================

ERROR:
------
[user@work ~]$ code
/home/user/Downloads/visual_code/usr/share/code/bin/../code: error while loading shared libraries: libXss.so.1: cannot open shared object file: No such file or directory

SOLUTION:
---------
sudo dnf -y install dnf-yum
sudo yum -y install libXScrnSaver


=======================================================================

ERROR: During ANDROID installation through "studio.sh"
-------------------------------------------------------
Linux-based systems support VM acceleration through the KVM software package. 
https://developer.android.com/studio/run/emulator-acceleration#vm-linux

CHECKS:
-------
https://help.ubuntu.com/community/KVM/Installation

$ egrep -c '(vmx|svm)' /proc/cpuinfo

If 0 it means that your CPU doesn't support hardware virtualization.
If 1 or more it does - but you still need to make sure that virtualization is enabled in the BIOS. 

$ qemu-kvm

Could not access KVM kernel module: No such file or directory
qemu-system-x86_64: failed to initialize KVM: No such file or directory

SOLUTION:
---------

1. Enable hardware Virtuization from BIOS

2. Unload kvm & kvm_intel
modprobe -r kvm
modprobe -r kvm_intel

3. load kvm again
sudo modprobe kvm 
sudo modprobe kvm-intel nested=1

4. check for kvm
$ lsmod | grep kvm
$ lscpu

=======================================================================



